---
image: quay.io/okderators/local-storage-operator-bundle:4.15.0-2024-04-16-164915
name: local-storage-operator.v4.15.0-2024-04-16-164915
package: local-storage-operator
properties:
- type: olm.gvk
  value:
    group: local.storage.openshift.io
    kind: LocalVolume
    version: v1
- type: olm.gvk
  value:
    group: local.storage.openshift.io
    kind: LocalVolumeDiscovery
    version: v1alpha1
- type: olm.gvk
  value:
    group: local.storage.openshift.io
    kind: LocalVolumeDiscoveryResult
    version: v1alpha1
- type: olm.gvk
  value:
    group: local.storage.openshift.io
    kind: LocalVolumeSet
    version: v1alpha1
- type: olm.package
  value:
    packageName: local-storage-operator
    version: 4.15.0-2024-04-16-164915
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJsb2NhbC1zdG9yYWdlLW1ldHJpY3MifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlcnZpY2VzIiwiZW5kcG9pbnRzIiwicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibG9jYWwtc3RvcmFnZS1tZXRyaWNzIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IlJvbGUiLCJuYW1lIjoibG9jYWwtc3RvcmFnZS1tZXRyaWNzIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoicHJvbWV0aGV1cy1rOHMiLCJuYW1lc3BhY2UiOiJvcGVuc2hpZnQtbW9uaXRvcmluZyJ9XX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEyLjEifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJsb2NhbHZvbHVtZWRpc2NvdmVyeXJlc3VsdHMubG9jYWwuc3RvcmFnZS5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6ImxvY2FsLnN0b3JhZ2Uub3BlbnNoaWZ0LmlvIiwibmFtZXMiOnsia2luZCI6IkxvY2FsVm9sdW1lRGlzY292ZXJ5UmVzdWx0IiwibGlzdEtpbmQiOiJMb2NhbFZvbHVtZURpc2NvdmVyeVJlc3VsdExpc3QiLCJwbHVyYWwiOiJsb2NhbHZvbHVtZWRpc2NvdmVyeXJlc3VsdHMiLCJzaW5ndWxhciI6ImxvY2Fsdm9sdW1lZGlzY292ZXJ5cmVzdWx0In0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTG9jYWxWb2x1bWVEaXNjb3ZlcnlSZXN1bHQgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGxvY2Fsdm9sdW1lZGlzY292ZXJ5cmVzdWx0cyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkxvY2FsVm9sdW1lRGlzY292ZXJ5UmVzdWx0U3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIExvY2FsVm9sdW1lRGlzY292ZXJ5UmVzdWx0IiwicHJvcGVydGllcyI6eyJub2RlTmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5vZGUgb24gd2hpY2ggdGhlIGRldmljZXMgYXJlIGRpc2NvdmVyZWQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJub2RlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkxvY2FsVm9sdW1lRGlzY292ZXJ5UmVzdWx0U3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIExvY2FsVm9sdW1lRGlzY292ZXJ5UmVzdWx0IiwicHJvcGVydGllcyI6eyJkaXNjb3ZlcmVkRGV2aWNlcyI6eyJkZXNjcmlwdGlvbiI6IkRpc2NvdmVyZWREZXZpY2VzIGNvbnRhaW5zIHRoZSBsaXN0IG9mIGRldmljZXMgb24gd2hpY2ggTFNPIGlzIGNhcGFibGUgb2YgY3JlYXRpbmcgTG9jYWxQVnMgVGhlIGRldmljZXMgaW4gdGhpcyBsaXN0IHF1YWxpZnkgdGhlc2UgZm9sbG93aW5nIGNvbmRpdGlvbnMuIC0gaXQgc2hvdWxkIGJlIGEgbm9uLXJlbW92YWJsZSBkZXZpY2UuIC0gaXQgc2hvdWxkIG5vdCBiZSBhIHJlYWQtb25seSBkZXZpY2UuIC0gaXQgc2hvdWxkIG5vdCBiZSBtb3VudGVkIGFueXdoZXJlIC0gaXQgc2hvdWxkIG5vdCBiZSBhIGJvb3QgZGV2aWNlIC0gaXQgc2hvdWxkIG5vdCBoYXZlIGNoaWxkIHBhcnRpdGlvbnMiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkRpc2NvdmVyZWREZXZpY2Ugc2hvd3MgdGhlIGxpc3Qgb2YgZGlzY292ZXJlZCBkZXZpY2VzIHdpdGggdGhlaXIgcHJvcGVydGllcyIsInByb3BlcnRpZXMiOnsiZGV2aWNlSUQiOnsiZGVzY3JpcHRpb24iOiJEZXZpY2VJRCByZXByZXNlbnRzIHRoZSBwZXJzaXN0ZW50IG5hbWUgb2YgdGhlIGRldmljZS4gRm9yIGVnLCAvZGV2L2Rpc2svYnktaWQvLi4uIiwidHlwZSI6InN0cmluZyJ9LCJmc3R5cGUiOnsiZGVzY3JpcHRpb24iOiJGU1R5cGUgcmVwcmVzZW50cyB0aGUgZmlsZXN5c3RlbSBhdmFpbGFibGUgb24gdGhlIGRldmljZSIsInR5cGUiOiJzdHJpbmcifSwibW9kZWwiOnsiZGVzY3JpcHRpb24iOiJNb2RlbCBvZiB0aGUgZGlzY292ZXJlZCBkZXZpY2UiLCJ0eXBlIjoic3RyaW5nIn0sInBhdGgiOnsiZGVzY3JpcHRpb24iOiJQYXRoIHJlcHJlc2VudHMgdGhlIGRldmljZSBwYXRoLiBGb3IgZWcsIC9kZXYvc2RiIiwidHlwZSI6InN0cmluZyJ9LCJwcm9wZXJ0eSI6eyJkZXNjcmlwdGlvbiI6IlByb3BlcnR5IHJlcHJlc2VudHMgd2hldGhlciB0aGUgZGV2aWNlIHR5cGUgaXMgcm90YXRpb25hbCBvciBub3QiLCJ0eXBlIjoic3RyaW5nIn0sInNlcmlhbCI6eyJkZXNjcmlwdGlvbiI6IlNlcmlhbCBudW1iZXIgb2YgdGhlIGRpc2siLCJ0eXBlIjoic3RyaW5nIn0sInNpemUiOnsiZGVzY3JpcHRpb24iOiJTaXplIG9mIHRoZSBkaXNjb3ZlcmVkIGRldmljZSIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIGRlZmluZXMgd2hldGhlciB0aGUgZGV2aWNlIGlzIGF2YWlsYWJsZSBmb3IgdXNlIG9yIG5vdCIsInByb3BlcnRpZXMiOnsic3RhdGUiOnsiZGVzY3JpcHRpb24iOiJTdGF0ZSBzaG93cyB0aGUgYXZhaWxhYmlsaXR5IG9mIHRoZSBkZXZpY2UiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzdGF0ZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoZSBkaXNjb3ZlcmVkIGRldmljZSIsInR5cGUiOiJzdHJpbmcifSwidmVuZG9yIjp7ImRlc2NyaXB0aW9uIjoiVmVuZG9yIG9mIHRoZSBkaXNjb3ZlcmVkIGRldmljZSIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImRldmljZUlEIiwiZnN0eXBlIiwibW9kZWwiLCJwYXRoIiwicHJvcGVydHkiLCJzZXJpYWwiLCJzaXplIiwic3RhdHVzIiwidHlwZSIsInZlbmRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJkaXNjb3ZlcmVkVGltZVN0YW1wIjp7ImRlc2NyaXB0aW9uIjoiRGlzY292ZXJlZFRpbWVTdGFtcCBpcyB0aGUgbGFzdCB0aW1lc3RhbXAgd2hlbiB0aGUgbGlzdCBvZiBkaXNjb3ZlcmVkIGRldmljZXMgd2FzIHVwZGF0ZWQiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/okderators/local-storage-operator-bundle:4.15.0-2024-04-16-164915
  name: ""
- image: quay.io/okderators/local-storage-operator:4.15.0-2024-04-16-164915
  name: ""
schema: olm.bundle
