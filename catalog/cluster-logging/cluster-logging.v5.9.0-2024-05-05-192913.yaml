---
image: quay.io/okderators/cluster-logging-operator-bundle:5.9.0-2024-05-05-192913
name: clusterlogging.v5.9.0-2024-05-05-192913
package: cluster-logging
properties:
- type: olm.gvk
  value:
    group: logging.openshift.io
    kind: ClusterLogForwarder
    version: v1
- type: olm.gvk
  value:
    group: logging.openshift.io
    kind: ClusterLogging
    version: v1
- type: olm.gvk
  value:
    group: logging.openshift.io
    kind: LogFileMetricExporter
    version: v1alpha1
- type: olm.maxOpenShiftVersion
  value: 4.17
- type: olm.package
  value:
    packageName: cluster-logging
    version: 5.9.0-2024-05-05-192913
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjbHVzdGVyLWxvZ2dpbmctb3BlcmF0b3IifSwibmFtZSI6ImNsdXN0ZXItbG9nZ2luZy1vcGVyYXRvci1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7InBvcnQiOiJodHRwLW1ldHJpY3MifV0sIm5hbWVzcGFjZVNlbGVjdG9yIjp7fSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsibmFtZSI6ImNsdXN0ZXItbG9nZ2luZy1vcGVyYXRvciJ9fX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsibmFtZSI6ImNsdXN0ZXItbG9nZ2luZy1vcGVyYXRvciJ9LCJuYW1lIjoiY2x1c3Rlci1sb2dnaW5nLW9wZXJhdG9yLW1ldHJpY3MifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHAtbWV0cmljcyIsInBvcnQiOjg2ODYsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6ODY4Nn1dLCJzZWxlY3RvciI6eyJuYW1lIjoiY2x1c3Rlci1sb2dnaW5nLW9wZXJhdG9yIn0sInNlc3Npb25BZmZpbml0eSI6Ik5vbmUiLCJ0eXBlIjoiQ2x1c3RlcklQIn0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiY29sbGVjdC1hcHBsaWNhdGlvbi1sb2dzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsibG9nZ2luZy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VOYW1lcyI6WyJhcHBsaWNhdGlvbiJdLCJyZXNvdXJjZXMiOlsibG9ncyJdLCJ2ZXJicyI6WyJjb2xsZWN0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiY29sbGVjdC1hdWRpdC1sb2dzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsibG9nZ2luZy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VOYW1lcyI6WyJhdWRpdCJdLCJyZXNvdXJjZXMiOlsibG9ncyJdLCJ2ZXJicyI6WyJjb2xsZWN0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiY29sbGVjdC1pbmZyYXN0cnVjdHVyZS1sb2dzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsibG9nZ2luZy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VOYW1lcyI6WyJpbmZyYXN0cnVjdHVyZSJdLCJyZXNvdXJjZXMiOlsibG9ncyJdLCJ2ZXJicyI6WyJjb2xsZWN0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlByb21ldGhldXNSdWxlIiwibWV0YWRhdGEiOnsibmFtZSI6ImNvbGxlY3RvciJ9LCJzcGVjIjp7Imdyb3VwcyI6W3sibmFtZSI6ImxvZ2dpbmdfY29sbGVjdG9yLmFsZXJ0cyIsInJ1bGVzIjpbeyJhbGVydCI6IkNvbGxlY3Rvck5vZGVEb3duIiwiYW5ub3RhdGlvbnMiOnsibWVzc2FnZSI6IlByb21ldGhldXMgY291bGQgbm90IHNjcmFwZSB7eyAkbGFiZWxzLm5hbWVzcGFjZSB9fS97eyAkbGFiZWxzLnBvZCB9fSBjb2xsZWN0b3IgY29tcG9uZW50IGZvciBtb3JlIHRoYW4gMTBtLiIsInN1bW1hcnkiOiJDb2xsZWN0b3IgY2Fubm90IGJlIHNjcmFwZWQifSwiZXhwciI6InVwe2FwcF9rdWJlcm5ldGVzX2lvX2NvbXBvbmVudCA9IFwiY29sbGVjdG9yXCIsIGFwcF9rdWJlcm5ldGVzX2lvX3BhcnRfb2YgPSBcImNsdXN0ZXItbG9nZ2luZ1wifSA9PSAwXG4iLCJmb3IiOiIxMG0iLCJsYWJlbHMiOnsic2VydmljZSI6ImNvbGxlY3RvciIsInNldmVyaXR5IjoiY3JpdGljYWwifX0seyJhbGVydCI6IkNvbGxlY3RvckhpZ2hFcnJvclJhdGUiLCJhbm5vdGF0aW9ucyI6eyJtZXNzYWdlIjoie3sgJHZhbHVlIH19JSBvZiByZWNvcmRzIGhhdmUgcmVzdWx0ZWQgaW4gYW4gZXJyb3IgYnkge3sgJGxhYmVscy5uYW1lc3BhY2UgfX0ve3sgJGxhYmVscy5wb2QgfX0gY29sbGVjdG9yIGNvbXBvbmVudC4iLCJzdW1tYXJ5Ijoie3sgJGxhYmVscy5uYW1lc3BhY2UgfX0ve3sgJGxhYmVscy5wb2QgfX0gY29sbGVjdG9yIGNvbXBvbmVudCBlcnJvcnMgYXJlIGhpZ2gifSwiZXhwciI6IjEwMCAqIChcbiAgICBjb2xsZWN0b3I6bG9nX251bV9lcnJvcnM6c3VtX3JhdGV7YXBwX2t1YmVybmV0ZXNfaW9fcGFydF9vZiA9IFwiY2x1c3Rlci1sb2dnaW5nXCJ9XG4gIC9cbiAgICBjb2xsZWN0b3I6cmVjZWl2ZWRfZXZlbnRzOnN1bV9yYXRle2FwcF9rdWJlcm5ldGVzX2lvX3BhcnRfb2YgPSBcImNsdXN0ZXItbG9nZ2luZ1wifVxuICApIFx1MDAzZSAwLjAwMVxuIiwiZm9yIjoiMTVtIiwibGFiZWxzIjp7InNlcnZpY2UiOiJjb2xsZWN0b3IiLCJzZXZlcml0eSI6ImNyaXRpY2FsIn19LHsiYWxlcnQiOiJDb2xsZWN0b3JWZXJ5SGlnaEVycm9yUmF0ZSIsImFubm90YXRpb25zIjp7Im1lc3NhZ2UiOiJ7eyAkdmFsdWUgfX0lIG9mIHJlY29yZHMgaGF2ZSByZXN1bHRlZCBpbiBhbiBlcnJvciBieSB7eyAkbGFiZWxzLm5hbWVzcGFjZSB9fS97eyAkbGFiZWxzLnBvZCB9fSBjb2xsZWN0b3IgY29tcG9uZW50LiIsInN1bW1hcnkiOiJ7eyAkbGFiZWxzLm5hbWVzcGFjZSB9fS97eyAkbGFiZWxzLnBvZCB9fSBjb2xsZWN0b3IgY29tcG9uZW50IGVycm9ycyBhcmUgdmVyeSBoaWdoIn0sImV4cHIiOiIxMDAgKiAoXG4gICAgY29sbGVjdG9yOmxvZ19udW1fZXJyb3JzOnN1bV9yYXRle2FwcF9rdWJlcm5ldGVzX2lvX3BhcnRfb2YgPSBcImNsdXN0ZXItbG9nZ2luZ1wifVxuICAvXG4gICAgY29sbGVjdG9yOnJlY2VpdmVkX2V2ZW50czpzdW1fcmF0ZXthcHBfa3ViZXJuZXRlc19pb19wYXJ0X29mID0gXCJjbHVzdGVyLWxvZ2dpbmdcIn1cbiAgKSBcdTAwM2UgMC4wNVxuIiwiZm9yIjoiMTVtIiwibGFiZWxzIjp7InNlcnZpY2UiOiJjb2xsZWN0b3IiLCJzZXZlcml0eSI6ImNyaXRpY2FsIn19LHsiYWxlcnQiOiJGbHVlbnRkUXVldWVMZW5ndGhJbmNyZWFzaW5nIiwiYW5ub3RhdGlvbnMiOnsibWVzc2FnZSI6IkZvciB0aGUgbGFzdCBob3VyLCBmbHVlbnRkIHt7ICRsYWJlbHMucG9kIH19IG91dHB1dCAne3sgJGxhYmVscy5wbHVnaW5faWQgfX0nIGF2ZXJhZ2UgYnVmZmVyIHF1ZXVlIGxlbmd0aCBoYXMgaW5jcmVhc2VkIGNvbnRpbnVvdXNseS4iLCJzdW1tYXJ5IjoiRmx1ZW50ZCBwb2Qge3sgJGxhYmVscy5wb2QgfX0gaXMgdW5hYmxlIHRvIGtlZXAgdXAgd2l0aCB0cmFmZmljIG92ZXIgdGltZSBmb3IgZm9yd2FyZGVyIG91dHB1dCB7eyAkbGFiZWxzLnBsdWdpbl9pZCB9fS4ifSwiZXhwciI6InN1bSBieSAocG9kLHBsdWdpbl9pZCkgKCAwICogKGRlcml2KGZsdWVudGRfb3V0cHV0X3N0YXR1c19lbWl0X3JlY29yZHNbMW1dIG9mZnNldCAxaCkpKSAgKyBvbihwb2QscGx1Z2luX2lkKSAgKCBkZXJpdihmbHVlbnRkX291dHB1dF9zdGF0dXNfYnVmZmVyX3F1ZXVlX2xlbmd0aFsxMG1dKSBcdTAwM2UgMCBhbmQgZGVsdGEoZmx1ZW50ZF9vdXRwdXRfc3RhdHVzX2J1ZmZlcl9xdWV1ZV9sZW5ndGhbMWhdKSBcdTAwM2UgMSApXG4iLCJmb3IiOiIxaCIsImxhYmVscyI6eyJzZXJ2aWNlIjoiY29sbGVjdG9yIiwic2V2ZXJpdHkiOiJXYXJuaW5nIn19LHsiYWxlcnQiOiJFbGFzdGljc2VhcmNoRGVwcmVjYXRpb24iLCJhbm5vdGF0aW9ucyI6eyJtZXNzYWdlIjoiVGhlIE9wZW5TaGlmdCBFbGFzdGljc2VhcmNoIE9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQgYW5kIGlzIHBsYW5uZWQgdG8gYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSByZWxlYXNlLiBSZWQgSGF0IHByb3ZpZGVzIGJ1ZyBmaXhlcyBhbmQgc3VwcG9ydCBmb3IgdGhpcyBmZWF0dXJlIGR1cmluZyB0aGUgY3VycmVudCByZWxlYXNlIGxpZmVjeWNsZSwgYnV0IHRoaXMgZmVhdHVyZSBubyBsb25nZXIgcmVjZWl2ZXMgZW5oYW5jZW1lbnRzLiBBcyBhbiBhbHRlcm5hdGl2ZSB0byB1c2luZyB0aGUgT3BlblNoaWZ0IEVsYXN0aWNzZWFyY2ggT3BlcmF0b3IgdG8gbWFuYWdlIHRoZSBkZWZhdWx0IGxvZyBzdG9yYWdlLCB5b3UgY2FuIHVzZSB0aGUgTG9raSBPcGVyYXRvci4iLCJzdW1tYXJ5IjoiRGV0ZWN0ZWQgRWxhc3RpY3NlYXJjaCBhcyB0aGUgaW4tY2x1c3RlciBzdG9yYWdlIHdoaWNoIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSByZWxlYXNlLiJ9LCJleHByIjoic3VtKGt1YmVfcG9kX2xhYmVsc3tuYW1lc3BhY2U9XCJvcGVuc2hpZnQtbG9nZ2luZ1wiLGxhYmVsX2NvbXBvbmVudD0nZWxhc3RpY3NlYXJjaCd9KSBcdTAwM2UgMFxuIiwiZm9yIjoiNW0iLCJsYWJlbHMiOnsic2VydmljZSI6InN0b3JhZ2UiLCJzZXZlcml0eSI6Ildhcm5pbmcifX0seyJhbGVydCI6IkZsdWVudGREZXByZWNhdGlvbiIsImFubm90YXRpb25zIjp7Im1lc3NhZ2UiOiJGbHVlbnRkIGlzIGRlcHJlY2F0ZWQgYW5kIGlzIHBsYW5uZWQgdG8gYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSByZWxlYXNlLiBSZWQgSGF0IHByb3ZpZGVzIGJ1ZyBmaXhlcyBhbmQgc3VwcG9ydCBmb3IgdGhpcyBmZWF0dXJlIGR1cmluZyB0aGUgY3VycmVudCByZWxlYXNlIGxpZmVjeWNsZSwgYnV0IHRoaXMgZmVhdHVyZSBubyBsb25nZXIgcmVjZWl2ZXMgZW5oYW5jZW1lbnRzLiBBcyBhbiBhbHRlcm5hdGl2ZSB0byBGbHVlbnRkLCB5b3UgY2FuIHVzZSBWZWN0b3IgaW5zdGVhZC4iLCJzdW1tYXJ5IjoiRGV0ZWN0ZWQgRmx1ZW50ZCBhcyB0aGUgY29sbGVjdG9yIHdoaWNoIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSByZWxlYXNlLiJ9LCJleHByIjoic3VtKGt1YmVfcG9kX2xhYmVsc3tuYW1lc3BhY2U9XCJvcGVuc2hpZnQtbG9nZ2luZ1wiLCBsYWJlbF9pbXBsZW1lbnRhdGlvbj0nZmx1ZW50ZCcsIGxhYmVsX2FwcF9rdWJlcm5ldGVzX2lvX21hbmFnZWRfYnk9XCJjbHVzdGVyLWxvZ2dpbmctb3BlcmF0b3JcIn0pIFx1MDAzZSAwXG4iLCJmb3IiOiI1bSIsImxhYmVscyI6eyJzZXJ2aWNlIjoiY29sbGVjdG9yIiwic2V2ZXJpdHkiOiJXYXJuaW5nIn19LHsiYWxlcnQiOiJLaWJhbmFEZXByZWNhdGlvbiIsImFubm90YXRpb25zIjp7Im1lc3NhZ2UiOiJUaGUgS2liYW5hIHdlYiBjb25zb2xlIGlzIG5vdyBkZXByZWNhdGVkIGFuZCBpcyBwbGFubmVkIHRvIGJlIHJlbW92ZWQgaW4gYSBmdXR1cmUgbG9nZ2luZyByZWxlYXNlLiIsInN1bW1hcnkiOiJEZXRlY3RlZCBLaWJhbmEgYXMgdGhlIHZpc3VhbGl6YXRpb24gd2hpY2ggaXMgZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGEgZnV0dXJlIHJlbGVhc2UuIn0sImV4cHIiOiJzdW0oa3ViZV9wb2RfbGFiZWxze25hbWVzcGFjZT1cIm9wZW5zaGlmdC1sb2dnaW5nXCIsbGFiZWxfY29tcG9uZW50PSdraWJhbmEnfSkgXHUwMDNlIDBcbiIsImZvciI6IjVtIiwibGFiZWxzIjp7InNlcnZpY2UiOiJ2aXN1YWxpemF0aW9uIiwic2V2ZXJpdHkiOiJXYXJuaW5nIn19XX0seyJuYW1lIjoibG9nZ2luZ19jbHVzdGVybG9nZ2luZ190ZWxlbWV0cnkucnVsZXMiLCJydWxlcyI6W3siZXhwciI6InN1bSBieShjbHVzdGVyKShsb2dfY29sbGVjdGVkX2J5dGVzX3RvdGFsKVxuIiwicmVjb3JkIjoiY2x1c3Rlcjpsb2dfY29sbGVjdGVkX2J5dGVzX3RvdGFsOnN1bSJ9LHsiZXhwciI6InN1bSBieShjbHVzdGVyKShsb2dfbG9nZ2VkX2J5dGVzX3RvdGFsKVxuIiwicmVjb3JkIjoiY2x1c3Rlcjpsb2dfbG9nZ2VkX2J5dGVzX3RvdGFsOnN1bSJ9LHsiZXhwciI6InN1bSBieShwb2QsIG5hbWVzcGFjZSwgYXBwX2t1YmVybmV0ZXNfaW9fcGFydF9vZikocmF0ZSh2ZWN0b3JfY29tcG9uZW50X2Vycm9yc190b3RhbFsybV0pKSBvciBzdW0gYnkocG9kLCBuYW1lc3BhY2UsIGFwcF9rdWJlcm5ldGVzX2lvX3BhcnRfb2YpKHJhdGUoZmx1ZW50ZF9vdXRwdXRfc3RhdHVzX251bV9lcnJvcnNbMm1dKSlcbiIsInJlY29yZCI6ImNvbGxlY3Rvcjpsb2dfbnVtX2Vycm9yczpzdW1fcmF0ZSJ9LHsiZXhwciI6InN1bSBieShwb2QsIG5hbWVzcGFjZSwgYXBwX2t1YmVybmV0ZXNfaW9fcGFydF9vZikocmF0ZSh2ZWN0b3JfY29tcG9uZW50X3JlY2VpdmVkX2V2ZW50c190b3RhbFsybV0pKSBvciBzdW0gYnkocG9kLCBuYW1lc3BhY2UsIGFwcF9rdWJlcm5ldGVzX2lvX3BhcnRfb2YpKHJhdGUoZmx1ZW50ZF9vdXRwdXRfc3RhdHVzX2VtaXRfcmVjb3Jkc1sybV0pKVxuIiwicmVjb3JkIjoiY29sbGVjdG9yOnJlY2VpdmVkX2V2ZW50czpzdW1fcmF0ZSJ9XX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0YWRhdGEtcmVhZGVyIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJwb2RzIiwibmFtZXNwYWNlcyIsIm5vZGVzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwcm9tZXRoZXVzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJwb2RzIiwic2VydmljZXMiLCJlbmRwb2ludHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiY29uZmlnbWFwcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoicHJvbWV0aGV1cyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6InByb21ldGhldXMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
relatedImages:
- image: quay.io/okderators/cluster-logging-operator-bundle:5.9.0-2024-05-05-192913
  name: ""
- image: quay.io/okderators/cluster-logging-operator:5.9.0-2024-05-05-192913
  name: ""
- image: quay.io/okderators/fluentd:5.9.0-2024-05-04-145517
  name: fluentd
- image: quay.io/okderators/log-file-metric-exporter:5.9.0-2024-05-04-142514
  name: log-file-metric-exporter
- image: quay.io/okderators/logging-view-plugin:5.9.0-2024-05-04-153300
  name: logging-console-plugin
- image: quay.io/okderators/vector:5.9.0-2024-05-04-134835
  name: vector
schema: olm.bundle
